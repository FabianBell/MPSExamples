package XMLJava.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptTestElement = createDescriptorForTestElement();
  /*package*/ final ConceptDescriptor myConceptVarElementRef = createDescriptorForVarElementRef();
  /*package*/ final ConceptDescriptor myConceptVarXmlElement = createDescriptorForVarXmlElement();
  /*package*/ final ConceptDescriptor myConceptXMLExpr = createDescriptorForXMLExpr();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptTestElement, myConceptVarElementRef, myConceptVarXmlElement, myConceptXMLExpr);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.TestElement:
        return myConceptTestElement;
      case LanguageConceptSwitch.VarElementRef:
        return myConceptVarElementRef;
      case LanguageConceptSwitch.VarXmlElement:
        return myConceptVarXmlElement;
      case LanguageConceptSwitch.XMLExpr:
        return myConceptXMLExpr;
      default:
        return null;
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForTestElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("XMLJava", "TestElement", 0xab66041823a64c26L, 0xa8fc9db16a81fe77L, 0x70ab13ed8c38f1bL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.core.xml.structure.XmlBaseElement", 0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c549486dL);
    b.origin("r:15e9509a-df61-4996-a6c2-46b23852211c(XMLJava.structure)/507412791515385627");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarElementRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("XMLJava", "VarElementRef", 0xab66041823a64c26L, 0xa8fc9db16a81fe77L, 0x70ab13ed8ab4340L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.baseLanguage.structure.Expression", 0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL);
    b.origin("r:15e9509a-df61-4996-a6c2-46b23852211c(XMLJava.structure)/507412791513793344");
    b.version(2);
    b.associate("varElement", 0x70ab13ed8ab4341L).target(0xab66041823a64c26L, 0xa8fc9db16a81fe77L, 0x70ab13ed8aaae6eL).optional(false).origin("507412791513793345").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForVarXmlElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("XMLJava", "VarXmlElement", 0xab66041823a64c26L, 0xa8fc9db16a81fe77L, 0x70ab13ed8aaae6eL);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.core.xml.structure.XmlBaseElement", 0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c549486dL);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:15e9509a-df61-4996-a6c2-46b23852211c(XMLJava.structure)/507412791513755246");
    b.version(2);
    b.aggregate("attributes", 0x70ab13ed8aaece1L).target(0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c54b8df3L).optional(true).ordered(true).multiple(true).origin("507412791513771233").done();
    b.aggregate("content", 0x70ab13ed8aaece7L).target(0xab66041823a64c26L, 0xa8fc9db16a81fe77L, 0x5f7e1db3e89dce86L).optional(false).ordered(true).multiple(false).origin("507412791513771239").done();
    b.alias("<varElement/>");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForXMLExpr() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("XMLJava", "XMLExpr", 0xab66041823a64c26L, 0xa8fc9db16a81fe77L, 0x5f7e1db3e89dce86L);
    b.class_(false, false, false);
    b.super_("jetbrains.mps.core.xml.structure.XmlContent", 0x479c7a8c02f943b5L, 0x9139d910cb22f298L, 0x5c842a42c549486bL);
    b.origin("r:15e9509a-df61-4996-a6c2-46b23852211c(XMLJava.structure)/6880969939207704198");
    b.version(2);
    b.aggregate("expression", 0x5f7e1db3e89dd0c8L).target(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("6880969939207704776").done();
    b.alias("xmlExpr");
    return b.create();
  }
}

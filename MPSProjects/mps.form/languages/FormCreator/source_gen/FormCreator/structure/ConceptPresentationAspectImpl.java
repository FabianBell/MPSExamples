package FormCreator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_DropDownField;
  private ConceptPresentation props_DropDownLabel;
  private ConceptPresentation props_Form;
  private ConceptPresentation props_FormFields;
  private ConceptPresentation props_TextField;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.DropDownField:
        if (props_DropDownField == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_DropDownField = cpb.create();
        }
        return props_DropDownField;
      case LanguageConceptSwitch.DropDownLabel:
        if (props_DropDownLabel == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_DropDownLabel = cpb.create();
        }
        return props_DropDownLabel;
      case LanguageConceptSwitch.Form:
        if (props_Form == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Form = cpb.create();
        }
        return props_Form;
      case LanguageConceptSwitch.FormFields:
        if (props_FormFields == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_FormFields = cpb.create();
        }
        return props_FormFields;
      case LanguageConceptSwitch.TextField:
        if (props_TextField == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_TextField = cpb.create();
        }
        return props_TextField;
    }
    return null;
  }
}
